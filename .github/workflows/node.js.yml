# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test pipeline

on:
  push:
    branches: ["prod"]
  pull_request:
    branches: ["prod"]

permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  id-token: write
  issues: read
  discussions: read
  packages: read
  pages: write
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Setup Backend Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/monolith/package-lock.json
      - run: npm ci
        working-directory: backend/monolith
      # - run: npm run build --if-present
      - name: Backend Test
        run: |
          if find . -type f \( -name '*.test.js' -o -name '*.spec.js' \) -exec false {} +; then
            echo "No test files found."
          else
            npm run test
          fi
        working-directory: backend/monolith
      - name: Setup Frontend Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
        working-directory: frontend
      # - run: npm run build --if-present
      - name: Set up environment variables
        run: |
          echo "hostname=${{ secrets.HOSTNAME }}" > backend/monolith/.env
          echo "user=${{ secrets.USER }}" >> backend/monolith/.env
          echo "password=${{ secrets.PASSWORD }}" >> backend/monolith/.env
        working-directory: ${{ github.workspace }}
      - name: frontend Test
        run: |
          # Find the Node.js process by name
          find_node_process() {
            pgrep -f "node index"
          }

          # Stop the Node.js process if it's running
          stop_node_process() {
            local node_pid
            node_pid=$(find_node_process)
            if [ -n "$node_pid" ]; then
              echo "Stopping Node.js process (PID $node_pid)"
              kill "$node_pid"
            fi
          }

          # Directory containing the files you want to process
          directory_path="/home/runner/work/Scrumptious/Scrumptious/frontend/tests"
          echo "$(pwd)"
          # Use the find command to generate a list of files in the directory
          files=($(find "$directory_path" -type f))

          # Loop through the list of files
          for file in "${files[@]}"; do
            echo "Processing $file"

            # Run your script or command on each file
            # Replace this with your actual command
            cd /home/runner/work/Scrumptious/Scrumptious/backend/monolith
            node index &
            cd /home/runner/work/Scrumptious/Scrumptious/frontend
            npm test "$file"

            echo "Finished processing $file"
            stop_node_process
          done
          fi
          echo "End test"
        working-directory: frontend
